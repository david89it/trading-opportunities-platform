version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: alpha-scanner-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - alpha-scanner-network

  # PostgreSQL database (for future use)
  postgres:
    image: postgres:15-alpine
    container_name: alpha-scanner-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alpha-scanner-network

  # FastAPI backend
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
      target: production
    container_name: alpha-scanner-api
    restart: unless-stopped
    env_file:
      - ./apps/api/.env
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/app
      - USE_POLYGON_LIVE=true
      - RISK_PCT_PER_TRADE=0.005
      - MAX_HEAT_PCT=0.02
      - DAILY_STOP_R=-2.0
      - LOSS_STREAK_HALT=8
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - alpha-scanner-network

  # React frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: production
    container_name: alpha-scanner-web
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=/api/v1
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - alpha-scanner-network

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  alpha-scanner-network:
    driver: bridge
    name: alpha-scanner-network